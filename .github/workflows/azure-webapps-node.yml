# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_STATIC_WEB_APP_NAME: your-app-name    # Establece el nombre de tu aplicación
  AZURE_STATIC_WEB_APP_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}  # Agrega tu token de API en GitHub Secrets
  app_location: "public"      # Ruta a la carpeta donde está tu index.html
  api_location: "api"         # Ruta a la carpeta donde están tus funciones (si tienes)
  output_location: "."        # Carpeta de salida después de la construcción, generalmente raíz

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'  # Especifica la versión de Node.js que necesitas

    - name: Install dependencies
      run: npm install

    - name: Build app
      run: npm run build --if-present  # Si tienes una construcción específica (no necesaria para Static Web App)
      
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: static-web-app
        path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to Azure Static Web App
      uses: azure/static-web-apps-deploy@v1
      with:
        app-name: ${{ env.AZURE_STATIC_WEB_APP_NAME }}
        api-token: ${{ env.AZURE_STATIC_WEB_APP_API_TOKEN }}  # Utiliza el token de la API de Azure Static Web Apps
        app-location: ${{ env.app_location }}
        api-location: ${{ env.api_location }}
        output-location: ${{ env.output_location }}
